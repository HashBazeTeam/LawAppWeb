{"version":3,"file":"static/js/620.6a921651.chunk.js","mappings":"kNAQMA,EAAa,GAoInB,UA/HsB,SAACC,GACrB,IAAQC,GAAMC,EAAAA,EAAAA,KAAND,EACFE,EAAYH,EAAMG,UACxB,OACE,+BAEE,gBAAKC,UAAU,WAAf,UACE,gBAAKA,UAAU,0EAAf,UACE,UAAC,IAAD,YACE,gBAAKA,UAAU,qCAAf,UACE,iBACEA,UAAU,sDACV,aAAW,SAFb,WAIE,gBAAKA,UAAU,2DAAf,UACE,iBAAKA,UAAU,qDAAf,WACE,SAAC,KAAD,CAAMC,GAAG,IAAT,UAEE,gBACED,UAAU,qBACVE,IAAKC,kCAGT,gBAAKH,UAAU,oCAAf,UACE,UAAC,WAAD,CAAgBA,UAAU,6LAA1B,WACE,iBAAMA,UAAU,UAAhB,6BACA,SAAC,IAAD,CAAUA,UAAU,UAAU,cAAY,oBAKlD,iBAAKA,UAAU,4EAAf,UACGL,EAAWS,KAAI,SAACC,GAAD,OACd,SAAC,KAAD,CAEEJ,GAAII,EAAKC,KACTN,UAAS,sBACPD,GAAaM,EAAKE,KACd,kBACA,gBAHG,wBAHX,SASGF,EAAKE,MARDF,EAAKE,KAFE,KAahB,SAAC,KAAD,CACEN,GAAG,SACHD,UAAS,sBACM,UAAbD,EACI,kBACA,gBAHG,yBAFX,SAQGF,EAAE,sBAMX,SAAC,IAAD,CACEW,GAAIC,EAAAA,SACJC,MAAM,wBACNC,UAAU,qBACVC,QAAQ,wBACRC,MAAM,uBACNC,UAAU,wBACVC,QAAQ,qBAPV,UASE,SAAC,UAAD,CACEC,OAAK,EACLhB,UAAU,oFAFZ,UAIE,iBAAKA,UAAU,iFAAf,WACE,iBAAKA,UAAU,8CAAf,WACE,0BACE,gBACEA,UAAU,aACVE,IAAI,gEACJe,IAAI,QAGR,gBAAKjB,UAAU,QAAf,UACE,UAAC,WAAD,CACEA,UAAU,gLADZ,WAIE,iBAAMA,UAAU,UAAhB,8BACA,SAAC,IAAD,CAAOA,UAAU,UAAU,cAAY,kBAI7C,gBAAKA,UAAU,2BAAf,SACGL,EAAWS,KAAI,SAACC,GAAD,OACd,SAAC,KAAD,CAEEJ,GAAII,EAAKC,KACTN,UAAS,2DACPD,GAAaM,EAAKE,KACd,kBACA,gBAHG,yCAHX,SASGF,EAAKE,MARDF,EAAKE,KAFE,OAclB,SAAC,KAAD,CACEN,GAAG,SACHD,UAAS,yDACM,UAAbD,EACI,kBACA,gBAHG,iCAFX,SAQGF,EAAE,4BAWtB,C","sources":["components/common/NavigationBar.js"],"sourcesContent":["import React, { lazy } from \"react\";\n\nimport { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Popover, Transition } from \"@headlessui/react\";\nimport { MenuIcon, XIcon } from \"@heroicons/react/outline\";\nimport { useTranslation } from \"react-i18next\";\n\nconst navigation = [\n  // { name: \"Home\", href: \"/\" },\n  // { name: \"Contact Us\", href: \"/contact-us\" },\n];\n\nconst NavigationBar = (props) => {\n  const { t } = useTranslation();\n  const activeNav = props.activeNav;\n  return (\n    <>\n      {/* <div className=\"relative bg-white overflow-hidden\"> */}\n      <div className=\" mx-auto\">\n        <div className=\"relative z-10 pb-4 bg-white sm:pb-8 md:pb-8  lg:w-full lg:pb-8 xl:pb-8 \">\n          <Popover>\n            <div className=\"relative pt-6 px-4 sm:px-6 lg:px-8\">\n              <nav\n                className=\"relative flex items-center justify-between sm:h-10 \"\n                aria-label=\"Global\"\n              >\n                <div className=\"flex items-center flex-grow flex-shrink-0 lg:flex-grow-0\">\n                  <div className=\"flex items-center justify-between w-full md:w-auto\">\n                    <Link to=\"/\">\n                      {/* <span className=\"sr-only\">Workflow</span> */}\n                      <img\n                        className=\"h-8 w-auto sm:h-10\"\n                        src={process.env.PUBLIC_URL + \"/images/logo.png\"}\n                      />\n                    </Link>\n                    <div className=\"-mr-2 flex items-center md:hidden\">\n                      <Popover.Button className=\"bg-white rounded-md p-2 inline-flex items-center justify-center text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\">\n                        <span className=\"sr-only\">Open main menu</span>\n                        <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                      </Popover.Button>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"hidden md:block md:ml-2 md:pr-4 md:space-x-6 log:space-x-8 lg:justify-end\">\n                  {navigation.map((item) => (\n                    <Link\n                      key={item.name}\n                      to={item.href}\n                      className={`font-medium ${\n                        activeNav == item.name\n                          ? \"text-indigo-600\"\n                          : \"text-gray-700\"\n                      } hover:text-gray-900`}\n                    >\n                      {item.name}\n                    </Link>\n                  ))}\n                  <Link\n                    to=\"/login\"\n                    className={`font-medium ${\n                      activeNav == \"Log in\"\n                        ? \"text-indigo-600\"\n                        : \"text-gray-700\"\n                    }  hover:text-gray-900`}\n                  >\n                    {t(\"sign_in\")}\n                  </Link>\n                </div>\n              </nav>\n            </div>\n\n            <Transition\n              as={Fragment}\n              enter=\"duration-150 ease-out\"\n              enterFrom=\"opacity-0 scale-95\"\n              enterTo=\"opacity-100 scale-100\"\n              leave=\"duration-100 ease-in\"\n              leaveFrom=\"opacity-100 scale-100\"\n              leaveTo=\"opacity-0 scale-95\"\n            >\n              <Popover.Panel\n                focus\n                className=\"absolute z-10 top-0 inset-x-0 p-2 transition transform origin-top-right md:hidden\"\n              >\n                <div className=\"rounded-lg shadow-md bg-white ring-1 ring-black ring-opacity-5 overflow-hidden\">\n                  <div className=\"px-5 pt-4 flex items-center justify-between\">\n                    <div>\n                      <img\n                        className=\"h-8 w-auto\"\n                        src=\"https://tailwindui.com/img/logos/workflow-mark-indigo-600.svg\"\n                        alt=\"\"\n                      />\n                    </div>\n                    <div className=\"-mr-2\">\n                      <Popover.Button\n                        className=\"bg-white rounded-md p-2 inline-flex items-center justify-center \n                        hover:text-gray-500 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\"\n                      >\n                        <span className=\"sr-only\">Close main menu</span>\n                        <XIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                      </Popover.Button>\n                    </div>\n                  </div>\n                  <div className=\"px-2 pt-2 pb-3 space-y-1\">\n                    {navigation.map((item) => (\n                      <Link\n                        key={item.name}\n                        to={item.href}\n                        className={`block px-3 py-2 rounded-md text-base font-medium ${\n                          activeNav == item.name\n                            ? \"text-indigo-600\"\n                            : \"text-gray-700\"\n                        } hover:text-gray-900 hover:bg-gray-50`}\n                      >\n                        {item.name}\n                      </Link>\n                    ))}\n                  </div>\n                  <Link\n                    to=\"/login\"\n                    className={`block w-full px-5 py-3 text-center font-medium ${\n                      activeNav == \"Log in\"\n                        ? \"text-indigo-600\"\n                        : \"text-gray-700\"\n                    } bg-gray-50 hover:bg-gray-100`}\n                  >\n                    {t(\"sign_in\")}\n                  </Link>\n                </div>\n              </Popover.Panel>\n            </Transition>\n          </Popover>\n        </div>\n      </div>\n      {/* </div> */}\n    </>\n  );\n};\n\nexport default NavigationBar;\n"],"names":["navigation","props","t","useTranslation","activeNav","className","to","src","process","map","item","href","name","as","Fragment","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","focus","alt"],"sourceRoot":""}