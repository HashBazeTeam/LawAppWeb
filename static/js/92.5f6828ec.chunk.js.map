{"version":3,"file":"static/js/92.5f6828ec.chunk.js","mappings":"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","sources":["utils/function.js","views/chat/Chat.js","../node_modules/typescript/lib|sync"],"sourcesContent":["import { saveAs } from \"file-saver\";\nimport { Timestamp , convertFirestoreTimeStampToDate} from \"src/services/firebase\";\n\n// Get image from bucket given the image identifier\nexport function getImageFromBucket(imageName) {\n  //   return `https://s3.ap-south-1.amazonaws.com/up-to-now-images/${imageName}.${imageType}`;\n  return imageName;\n}\n\n/**\n * Add given data object to FormData type object\n * @param {*} formData : FormData\n * @param {*} data : {key: value}\n * @returns FormData object\n */\nexport function addDataToFormData(data, formData = new FormData()) {\n  for (let key in data) {\n    if (key === \"images\" || key === \"image\") {\n      for (let i = 0; i < data[key].length; i++) {\n        formData.append(key, data[key][i]);\n      }\n      continue;\n    }\n    formData.set(key, data[key]);\n  }\n  return formData;\n}\n\n/**\n * Print FormData object to console\n * @param {*} formData\n * @param {*} data\n */\nexport function printFormData(formData, data) {\n  for (let key in data) {\n    console.log(key, formData.get(key));\n  }\n}\n\n/**\n * Save given image to the local\n * @param {*} urlArr : URL String Array\n */\nexport async function saveImg(urlArr, fileName) {\n  (async () => {\n    if (!Array.isArray(urlArr)) {\n      const xhr = new XMLHttpRequest();\n      xhr.responseType = 'blob';\n      xhr.onload = (event) => {\n        const blob = xhr.response;\n        saveAs(blob, fileName);\n      };\n      xhr.open('GET', urlArr);\n      xhr.send();\n      // const response = await fetch(urlArr);\n      // const blob = await response.blob();\n      // saveAs(blob);\n      return;\n    }\n    for (let i = 0; i < urlArr.length; i++) {\n      const response = await fetch(urlArr[i]);\n      const blob = await response.blob();\n      saveAs(blob);\n    }\n  })();\n}\n\n/**\n * Delete all the empty keys from the given object\n * @param {*} obj : {key: value}\n * @returns\n */\nexport function deleteEmptyKeys(obj) {\n  for (let key in obj) {\n    if (obj[key] === \"\") {\n      delete obj[key];\n    } else if (obj[key] === \"Open this select menu\") {\n      delete obj[key];\n    }\n  }\n  return obj;\n}\n\n/**\n * Convert given Date object to Sri Lanka date format string (dd/mm/yyyy)\n * @param {*} date\n * @returns\n */\nexport function convertTZ(paramDate) {\n  if (!paramDate) return \"\";\n\n  let date = paramDate;\n  if (paramDate instanceof Timestamp) {\n    date = convertFirestoreTimeStampToDate(paramDate);\n  }\n\n  let dateObj = new Date(date);\n\n  // MM-DD-YYYY format\n  let dateStr = dateObj.toLocaleDateString(\"ko-KR\", {\n    timeZone: \"Asia/Colombo\",\n  });\n  // Convert ot YYYY-MM-DD format\n  let dateArr = dateStr.split(\".\");\n  let year = dateArr[0].trim();\n  let month = dateArr[1].trim();\n  let day = dateArr[2].trim();\n\n  year.length === 2 ? (year = \"00\" + year) : year;\n  year.length === 3 ? (year = \"0\" + year) : year;\n  month.length === 1 ? (month = \"0\" + month) : month;\n  day.length === 1 ? (day = \"0\" + day) : day;\n\n  const final = `${year}-${month}-${day}`;\n  return final;\n}\n\n/**\n * Add empty strings to the given object keys if it is not present, null or undefined\n * @param {{key: value}} obj\n * @param {[key1, key2, key3]} keys\n * @returns {{key: value}} obj\n */\nexport function addEmptyStrings(obj, keys = null) {\n  if (keys) {\n    for (let i = 0; i < keys.length; i++) {\n      if (!obj[keys[i]]) {\n        obj[keys[i]] = \"\";\n      } else if (obj[keys[i]] === null) {\n        obj[keys[i]] = \"\";\n      } else if (obj[keys[i]] === undefined) {\n        obj[keys[i]] = \"\";\n      } else if (obj[keys[i]] === \"Open this select menu\") {\n        obj[keys[i]] = \"\";\n      }\n    }\n  } else {\n    for (let key in obj) {\n      if (obj[key] === null) {\n        obj[key] = \"\";\n      } else if (obj[key] === undefined) {\n        obj[key] = \"\";\n      } else if (obj[key] === \"Open this select menu\") {\n        obj[key] = \"\";\n      }\n    }\n  }\n  return obj;\n}\n\nexport function getUpdatedDataOnly(original, updated) {\n  let updatedData = {};\n  for (let key in original) {\n    if (original[key] != updated[key]) {\n      updatedData[key] = updated[key];\n    }\n  }\n  return updatedData;\n}\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport Joi from \"joi\";\nimport { LinkIcon } from \"@heroicons/react/solid\";\nimport { toast } from \"react-toastify\";\nimport { useTranslation } from \"react-i18next\";\nimport { MessageList, Input, Button, MessageBox } from \"react-chat-elements\";\nimport { SystemMessage } from \"react-chat-elements\";\nimport CIcon from \"@coreui/icons-react\";\nimport { CButton } from \"@coreui/react\";\nimport { cilSearch } from \"@coreui/icons\";\n\n// Custom imports\nimport { LoadingIndicator } from \"src/components\";\nimport { saveImg } from \"src/utils/function\";\nimport {\n  collection,\n  query,\n  where,\n  onSnapshot,\n  firestore,\n} from \"src/services/firebase\";\nimport { selectors } from \"src/store\";\nimport { questionServices } from \"src/services\";\nimport { textSpanContainsTextSpan } from \"typescript\";\n\n/**\n * Single Chat User Interface\n */\nexport default function Chat(props) {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const screenHeight = window.innerHeight - 128; // Due to purge issue tailwind css doesn't detect variable changes.\n  const question = props.location.state.question; // Get the question from the previous page.\n  const inputRef = useRef(null);\n\n  // Selector\n  const userID = useSelector(selectors.user.selectUserID);\n\n  // States\n  const [messages, setMessages] = useState([]);\n  const [formData, setFormData] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [file, setFile] = useState(null);\n\n  useEffect(() => {\n    const q = query(\n      collection(firestore, \"Question\", question.questionID, \"chat\")\n    );\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const chats = [];\n      querySnapshot.forEach((doc) => {\n        const chat = doc.data();\n        const chatPosition =\n          chat.author.id == question.clientID ? \"left\" : \"right\";\n\n        // Get the chat type\n        let chatType = \"text\";\n        switch (chat.type) {\n          case \"image\":\n            chatType = \"photo\";\n            break;\n          case \"file\":\n            chatType = \"file\";\n            break;\n          default:\n            chatType = \"text\";\n            break;\n        }\n\n        // Get the class name according to the side and data type\n        let classNames = \"py-2 text-black text-lg\";\n        if (chatPosition == \"left\") {\n          if (chat.type == \"image\") {\n            classNames += \" mr-[60%]\";\n          } else {\n            classNames += \" mr-16\";\n          }\n        } else {\n          if (chat.type == \"image\") {\n            classNames += \" ml-[60%]\";\n          } else {\n            classNames += \" ml-16\";\n          }\n        }\n\n        const chatModel = {\n          position: chatPosition,\n          type: chatType,\n          id: chat.id,\n          date: new Date(chat.createdAt),\n          className: classNames,\n          // className: chatPosition == \"py-2 mr-16 \",\n          text: chat.text ? chat.text : chat.name,\n          title: chatPosition == \"left\" ? \"Client\" : \"Admin\",\n          data: {\n            uri: chat.uri,\n            className: \"w-40\",\n            // uri: \"https://picsum.photos/200\",\n            status: {\n              click: false,\n              loading: 0,\n            },\n          },\n        };\n        chats.push(chatModel);\n      });\n      setMessages(chats);\n      questionServices.updateQuestion(question.questionID, {\n        isReadAdmin: true, // When the admin come to the chat, seen status is changed.\n      });\n    });\n\n    return unsubscribe;\n  }, []);\n\n  /**\n   * Handlers\n   */\n  const handleAttachIconClick = () => {\n    inputRef.current.click();\n  };\n\n  const handleChange = (e) => {\n    setFormData(e.target.value);\n  };\n\n  const handleFileInputChange = async (e) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n    const msgTime = new Date().valueOf();\n    const TWENTY_MB = 1024 * 1024 * 20;\n\n    if (file.size > TWENTY_MB) {\n      toast.error(\"Max file size is 20MB\");\n      return;\n    }\n    console.log(\"File data\", file);\n    // Check file type\n    let fileType = \"image\";\n    if (file.type.startsWith(\"image\")) {\n      fileType = \"image\";\n    } else {\n      fileType = \"file\";\n    }\n\n    const chat = {\n      author: { id: userID },\n      createdAt: msgTime,\n      id: msgTime.toString(),\n      type: fileType,\n      name: file.name,\n      size: file.size,\n      height: 720,\n      width: 1140,\n      mimeType: file.type,\n    };\n\n    try {\n      if (question.status == \"Yet to be picked\") {\n        await questionServices.updateQuestion(question.questionID, {\n          status: \"Ongoing\",\n          isReadClient: false, // When a new msg is sent change the read status of client message\n        });\n      } else {\n        await questionServices.updateQuestion(question.questionID, {\n          isReadClient: false, // When a new msg is sent change the read status of client message\n        });\n      }\n\n      await questionServices.addChatFileToQuestion(\n        question.questionID,\n        file,\n        chat\n      );\n    } catch (error) {\n      console.log(error);\n      toast.error(\"Error uploading file\");\n    }\n  };\n\n  // Handle send btn pressed\n  const handleSend = async (e) => {\n    e.preventDefault();\n    if (formData == \"\" || !formData) return;\n    const msgTime = new Date().valueOf();\n    const chat = {\n      author: { id: userID },\n      createdAt: msgTime,\n      id: msgTime.toString(),\n      type: \"text\",\n      text: formData,\n    };\n    try {\n      if (question.status == \"Yet to be picked\") {\n        await questionServices.updateQuestion(question.questionID, {\n          status: \"Ongoing\",\n          isReadClient: false, // When a new msg is sent change the read status of client message\n        });\n      } else {\n        await questionServices.updateQuestion(question.questionID, {\n          isReadClient: false, // When a new msg is sent change the read status of client message\n        });\n      }\n\n      await questionServices.addChatToQuestion(question.questionID, chat);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // Handle submit answer button\n  const handleSubmitAnswerBtnPressed = async () => {\n    if (question.status == \"Answered\") return;\n\n    setLoading(true);\n    try {\n      await questionServices.updateQuestion(question.questionID, {\n        status: \"Answered\",\n      });\n      const msgTime = new Date().valueOf();\n      const chat = {\n        author: { id: userID },\n        createdAt: msgTime,\n        id: msgTime.toString(),\n        type: \"text\",\n        text: \"Answered the question.\",\n      };\n      await questionServices.updateQuestion(question.questionID, {\n        isReadStatus: false,\n        isReadClient: false, // When a new msg is sent change the read status of client message\n      });\n      await questionServices.addChatToQuestion(question.questionID, chat);\n    } catch (error) {\n      setLoading(false);\n      toast.error(t(\"common_error\"));\n    }\n    setLoading(false);\n  };\n\n  const handleFileDownload = async (fileURI, fileName) => {\n    await saveImg(fileURI, fileName);\n  };\n\n  return (\n    <>\n      <div className=\"col-span-1 bg-red py-2 flex justify-center align-middle\">\n        <CButton\n          className=\" text-md\"\n          color=\"primary\"\n          variant=\"outline\"\n          onClick={() =>\n            history.push({\n              pathname: \"/law-admin/question/pool\",\n              state: {\n                client: {\n                  clientID: question.clientID,\n                  clientName: question.clientName,\n                },\n              },\n            })\n          }\n        >\n          <CIcon icon={cilSearch} />{\" \"}\n          <span className=\"text-sm\">{t(\"show_previous_questions\")}</span>\n        </CButton>\n      </div>\n      <div\n        className={`mb-4 columns-1 flex flex-col justify-between \n      h-screen bg-transparent overflow-y-scroll w-full`}\n      >\n        <SystemMessage text={\"Sample System message!\"} />\n        <MessageList\n          className=\"message-list m-1\"\n          lockable={true}\n          toBottomHeight={\"100%\"}\n          dataSource={messages}\n          onDownload={(item) => handleFileDownload(item.data.uri, item.text)}\n          // onOpen={(item) => { console.log(item) }}\n        />\n\n        <div className=\"mb-0 mx-1 sticky bottom-0 grid grid-cols-8 align-middle justify-center\">\n          <div className=\"col-span-7\">\n            <Input\n              className=\"m-1 p-1\"\n              value={file}\n              onChange={handleChange}\n              placeholder=\"Type here...\"\n              multiline={true}\n              rightButtons={\n                <Button\n                  color=\"white\"\n                  backgroundColor=\"black\"\n                  text=\"Send\"\n                  onClick={handleSend}\n                />\n              }\n              leftButtons={\n                <button\n                  id=\"recaptcha-container\"\n                  disabled={false}\n                  onClick={handleAttachIconClick}\n                  type=\"submit\"\n                  className={`group relative w-full flex justify-center py-1 px-4\n                    border-transparent text-sm font-medium text-black \n                    `}\n                >\n                  <input\n                    style={{ display: \"none\" }}\n                    ref={inputRef}\n                    type=\"file\"\n                    onChange={handleFileInputChange}\n                  />\n                  <span className=\"absolute left-0 inset-y-0 flex items-center pl-3\">\n                    <LinkIcon className=\"h-5 w-5\" aria-hidden=\"true\" />\n                  </span>\n                </button>\n              }\n            />\n          </div>\n          <div className=\"col-span-1 bg-red py-2 flex justify-center align-middle\">\n            <Button\n              color=\"white\"\n              backgroundColor=\"green\"\n              text=\"Submit Answer\"\n              onClick={handleSubmitAnswerBtnPressed}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 13411;\nmodule.exports = webpackEmptyContext;"],"names":["saveImg","urlArr","fileName","Array","isArray","xhr","XMLHttpRequest","responseType","onload","event","blob","response","saveAs","open","send","i","length","fetch","deleteEmptyKeys","obj","key","convertTZ","paramDate","date","Timestamp","convertFirestoreTimeStampToDate","dateArr","Date","toLocaleDateString","timeZone","split","year","trim","month","day","Chat","props","history","useHistory","t","useDispatch","useTranslation","question","window","innerHeight","location","state","inputRef","useRef","userID","useSelector","selectors","useState","messages","setMessages","formData","setFormData","setLoading","file","useEffect","q","query","collection","firestore","questionID","onSnapshot","querySnapshot","chats","forEach","doc","chat","data","chatPosition","author","id","clientID","chatType","type","classNames","chatModel","position","createdAt","className","text","name","title","uri","status","click","loading","push","questionServices","isReadAdmin","handleFileInputChange","e","target","files","msgTime","valueOf","size","toast","console","log","fileType","startsWith","toString","height","width","mimeType","isReadClient","handleSend","preventDefault","handleSubmitAnswerBtnPressed","isReadStatus","handleFileDownload","fileURI","color","variant","onClick","pathname","client","clientName","icon","cilSearch","lockable","toBottomHeight","dataSource","onDownload","item","value","onChange","placeholder","multiline","rightButtons","backgroundColor","leftButtons","disabled","current","style","display","ref","webpackEmptyContext","req","Error","code","keys","resolve","module","exports"],"sourceRoot":""}