{"version":3,"file":"static/js/272.f61d32ac.chunk.js","mappings":"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","sources":["views/analytics/CustomerInsight.js","../node_modules/randomcolor/randomColor.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { t } from \"i18next\";\nimport { CChart } from \"@coreui/react-chartjs\";\nimport randomColor from \"randomcolor\";\n\n/**\n * Customer Insight Chart\n */\nconst CustomerInsight = (props) => {\n  // Fetch data from firestore\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const labels = [\"Sri Lanka\", \"India\", \"Sweden\", \"Ukraine\"];\n    const backgroundColor = randomColor({\n      count: labels.length,\n      alpha: 0.5,\n    });\n    const datasets = [\n      {\n        backgroundColor: backgroundColor,\n        data: [40, 20, 80, 10],\n      },\n    ];\n\n    setData({\n      labels,\n      datasets,\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"w-1/2 object-contain\">\n        <CChart\n          wrapper={true}\n          height={200}\n          className=\"\"\n          type=\"doughnut\"\n          data={data}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default CustomerInsight;\n","// randomColor by David Merfield under the CC0 license\n// https://github.com/davidmerfield/randomColor/\n\n;(function(root, factory) {\n\n  // Support CommonJS\n  if (typeof exports === 'object') {\n    var randomColor = factory();\n\n    // Support NodeJS & Component, which allow module.exports to be a function\n    if (typeof module === 'object' && module && module.exports) {\n      exports = module.exports = randomColor;\n    }\n\n    // Support CommonJS 1.1.1 spec\n    exports.randomColor = randomColor;\n\n  // Support AMD\n  } else if (typeof define === 'function' && define.amd) {\n    define([], factory);\n\n  // Support vanilla script loading\n  } else {\n    root.randomColor = factory();\n  }\n\n}(this, function() {\n\n  // Seed to get repeatable colors\n  var seed = null;\n\n  // Shared color dictionary\n  var colorDictionary = {};\n\n  // Populate the color dictionary\n  loadColorBounds();\n\n  // check if a range is taken\n  var colorRanges = [];\n\n  var randomColor = function (options) {\n\n    options = options || {};\n\n    // Check if there is a seed and ensure it's an\n    // integer. Otherwise, reset the seed value.\n    if (options.seed !== undefined && options.seed !== null && options.seed === parseInt(options.seed, 10)) {\n      seed = options.seed;\n\n    // A string was passed as a seed\n    } else if (typeof options.seed === 'string') {\n      seed = stringToInteger(options.seed);\n\n    // Something was passed as a seed but it wasn't an integer or string\n    } else if (options.seed !== undefined && options.seed !== null) {\n      throw new TypeError('The seed value must be an integer or string');\n\n    // No seed, reset the value outside.\n    } else {\n      seed = null;\n    }\n\n    var H,S,B;\n\n    // Check if we need to generate multiple colors\n    if (options.count !== null && options.count !== undefined) {\n\n      var totalColors = options.count,\n          colors = [];\n      // Value false at index i means the range i is not taken yet.\n      for (var i = 0; i < options.count; i++) {\n        colorRanges.push(false)\n        }\n      options.count = null;\n\n      while (totalColors > colors.length) {\n\n        var color = randomColor(options);\n\n        if (seed !== null) {\n          options.seed = seed;\n        }\n\n        colors.push(color);\n      }\n\n      options.count = totalColors;\n\n      return colors;\n    }\n\n    // First we pick a hue (H)\n    H = pickHue(options);\n\n    // Then use H to determine saturation (S)\n    S = pickSaturation(H, options);\n\n    // Then use S and H to determine brightness (B).\n    B = pickBrightness(H, S, options);\n\n    // Then we return the HSB color in the desired format\n    return setFormat([H,S,B], options);\n  };\n\n  function pickHue(options) {\n    if (colorRanges.length > 0) {\n      var hueRange = getRealHueRange(options.hue)\n\n      var hue = randomWithin(hueRange)\n\n      //Each of colorRanges.length ranges has a length equal approximatelly one step\n      var step = (hueRange[1] - hueRange[0]) / colorRanges.length\n\n      var j = parseInt((hue - hueRange[0]) / step)\n\n      //Check if the range j is taken\n      if (colorRanges[j] === true) {\n        j = (j + 2) % colorRanges.length\n      }\n      else {\n        colorRanges[j] = true\n           }\n\n      var min = (hueRange[0] + j * step) % 359,\n          max = (hueRange[0] + (j + 1) * step) % 359;\n\n      hueRange = [min, max]\n\n      hue = randomWithin(hueRange)\n\n      if (hue < 0) {hue = 360 + hue;}\n      return hue\n    }\n    else {\n      var hueRange = getHueRange(options.hue)\n\n      hue = randomWithin(hueRange);\n      // Instead of storing red as two seperate ranges,\n      // we group them, using negative numbers\n      if (hue < 0) {\n        hue = 360 + hue;\n      }\n\n      return hue;\n    }\n  }\n\n  function pickSaturation (hue, options) {\n\n    if (options.hue === 'monochrome') {\n      return 0;\n    }\n\n    if (options.luminosity === 'random') {\n      return randomWithin([0,100]);\n    }\n\n    var saturationRange = getSaturationRange(hue);\n\n    var sMin = saturationRange[0],\n        sMax = saturationRange[1];\n\n    switch (options.luminosity) {\n\n      case 'bright':\n        sMin = 55;\n        break;\n\n      case 'dark':\n        sMin = sMax - 10;\n        break;\n\n      case 'light':\n        sMax = 55;\n        break;\n   }\n\n    return randomWithin([sMin, sMax]);\n\n  }\n\n  function pickBrightness (H, S, options) {\n\n    var bMin = getMinimumBrightness(H, S),\n        bMax = 100;\n\n    switch (options.luminosity) {\n\n      case 'dark':\n        bMax = bMin + 20;\n        break;\n\n      case 'light':\n        bMin = (bMax + bMin)/2;\n        break;\n\n      case 'random':\n        bMin = 0;\n        bMax = 100;\n        break;\n    }\n\n    return randomWithin([bMin, bMax]);\n  }\n\n  function setFormat (hsv, options) {\n\n    switch (options.format) {\n\n      case 'hsvArray':\n        return hsv;\n\n      case 'hslArray':\n        return HSVtoHSL(hsv);\n\n      case 'hsl':\n        var hsl = HSVtoHSL(hsv);\n        return 'hsl('+hsl[0]+', '+hsl[1]+'%, '+hsl[2]+'%)';\n\n      case 'hsla':\n        var hslColor = HSVtoHSL(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'hsla('+hslColor[0]+', '+hslColor[1]+'%, '+hslColor[2]+'%, ' + alpha + ')';\n\n      case 'rgbArray':\n        return HSVtoRGB(hsv);\n\n      case 'rgb':\n        var rgb = HSVtoRGB(hsv);\n        return 'rgb(' + rgb.join(', ') + ')';\n\n      case 'rgba':\n        var rgbColor = HSVtoRGB(hsv);\n        var alpha = options.alpha || Math.random();\n        return 'rgba(' + rgbColor.join(', ') + ', ' + alpha + ')';\n\n      default:\n        return HSVtoHex(hsv);\n    }\n\n  }\n\n  function getMinimumBrightness(H, S) {\n\n    var lowerBounds = getColorInfo(H).lowerBounds;\n\n    for (var i = 0; i < lowerBounds.length - 1; i++) {\n\n      var s1 = lowerBounds[i][0],\n          v1 = lowerBounds[i][1];\n\n      var s2 = lowerBounds[i+1][0],\n          v2 = lowerBounds[i+1][1];\n\n      if (S >= s1 && S <= s2) {\n\n         var m = (v2 - v1)/(s2 - s1),\n             b = v1 - m*s1;\n\n         return m*S + b;\n      }\n\n    }\n\n    return 0;\n  }\n\n  function getHueRange (colorInput) {\n\n    if (typeof parseInt(colorInput) === 'number') {\n\n      var number = parseInt(colorInput);\n\n      if (number < 360 && number > 0) {\n        return [number, number];\n      }\n\n    }\n\n    if (typeof colorInput === 'string') {\n\n      if (colorDictionary[colorInput]) {\n        var color = colorDictionary[colorInput];\n        if (color.hueRange) {return color.hueRange;}\n      } else if (colorInput.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorInput)[0];\n        return [ hue, hue ];\n      }\n    }\n\n    return [0,360];\n\n  }\n\n  function getSaturationRange (hue) {\n    return getColorInfo(hue).saturationRange;\n  }\n\n  function getColorInfo (hue) {\n\n    // Maps red colors to make picking hue easier\n    if (hue >= 334 && hue <= 360) {\n      hue-= 360;\n    }\n\n    for (var colorName in colorDictionary) {\n       var color = colorDictionary[colorName];\n       if (color.hueRange &&\n           hue >= color.hueRange[0] &&\n           hue <= color.hueRange[1]) {\n          return colorDictionary[colorName];\n       }\n    } return 'Color not found';\n  }\n\n  function randomWithin (range) {\n    if (seed === null) {\n      //generate random evenly destinct number from : https://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n      var golden_ratio = 0.618033988749895\n      var r=Math.random()\n      r += golden_ratio\n      r %= 1\n      return Math.floor(range[0] + r*(range[1] + 1 - range[0]));\n    } else {\n      //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n      var max = range[1] || 1;\n      var min = range[0] || 0;\n      seed = (seed * 9301 + 49297) % 233280;\n      var rnd = seed / 233280.0;\n      return Math.floor(min + rnd * (max - min));\n}\n  }\n\n  function HSVtoHex (hsv){\n\n    var rgb = HSVtoRGB(hsv);\n\n    function componentToHex(c) {\n        var hex = c.toString(16);\n        return hex.length == 1 ? '0' + hex : hex;\n    }\n\n    var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\n    return hex;\n\n  }\n\n  function defineColor (name, hueRange, lowerBounds) {\n\n    var sMin = lowerBounds[0][0],\n        sMax = lowerBounds[lowerBounds.length - 1][0],\n\n        bMin = lowerBounds[lowerBounds.length - 1][1],\n        bMax = lowerBounds[0][1];\n\n    colorDictionary[name] = {\n      hueRange: hueRange,\n      lowerBounds: lowerBounds,\n      saturationRange: [sMin, sMax],\n      brightnessRange: [bMin, bMax]\n    };\n\n  }\n\n  function loadColorBounds () {\n\n    defineColor(\n      'monochrome',\n      null,\n      [[0,0],[100,0]]\n    );\n\n    defineColor(\n      'red',\n      [-26,18],\n      [[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]\n    );\n\n    defineColor(\n      'orange',\n      [18,46],\n      [[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]\n    );\n\n    defineColor(\n      'yellow',\n      [46,62],\n      [[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]\n    );\n\n    defineColor(\n      'green',\n      [62,178],\n      [[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]\n    );\n\n    defineColor(\n      'blue',\n      [178, 257],\n      [[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]\n    );\n\n    defineColor(\n      'purple',\n      [257, 282],\n      [[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]\n    );\n\n    defineColor(\n      'pink',\n      [282, 334],\n      [[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]]\n    );\n\n  }\n\n  function HSVtoRGB (hsv) {\n\n    // this doesn't work for the values of 0 and 360\n    // here's the hacky fix\n    var h = hsv[0];\n    if (h === 0) {h = 1;}\n    if (h === 360) {h = 359;}\n\n    // Rebase the h,s,v values\n    h = h/360;\n    var s = hsv[1]/100,\n        v = hsv[2]/100;\n\n    var h_i = Math.floor(h*6),\n      f = h * 6 - h_i,\n      p = v * (1 - s),\n      q = v * (1 - f*s),\n      t = v * (1 - (1 - f)*s),\n      r = 256,\n      g = 256,\n      b = 256;\n\n    switch(h_i) {\n      case 0: r = v; g = t; b = p;  break;\n      case 1: r = q; g = v; b = p;  break;\n      case 2: r = p; g = v; b = t;  break;\n      case 3: r = p; g = q; b = v;  break;\n      case 4: r = t; g = p; b = v;  break;\n      case 5: r = v; g = p; b = q;  break;\n    }\n\n    var result = [Math.floor(r*255), Math.floor(g*255), Math.floor(b*255)];\n    return result;\n  }\n\n  function HexToHSB (hex) {\n    hex = hex.replace(/^#/, '');\n    hex = hex.length === 3 ? hex.replace(/(.)/g, '$1$1') : hex;\n\n    var red = parseInt(hex.substr(0, 2), 16) / 255,\n          green = parseInt(hex.substr(2, 2), 16) / 255,\n          blue = parseInt(hex.substr(4, 2), 16) / 255;\n\n    var cMax = Math.max(red, green, blue),\n          delta = cMax - Math.min(red, green, blue),\n          saturation = cMax ? (delta / cMax) : 0;\n\n    switch (cMax) {\n      case red: return [ 60 * (((green - blue) / delta) % 6) || 0, saturation, cMax ];\n      case green: return [ 60 * (((blue - red) / delta) + 2) || 0, saturation, cMax ];\n      case blue: return [ 60 * (((red - green) / delta) + 4) || 0, saturation, cMax ];\n    }\n  }\n\n  function HSVtoHSL (hsv) {\n    var h = hsv[0],\n      s = hsv[1]/100,\n      v = hsv[2]/100,\n      k = (2-s)*v;\n\n    return [\n      h,\n      Math.round(s*v / (k<1 ? k : 2-k) * 10000) / 100,\n      k/2 * 100\n    ];\n  }\n\n  function stringToInteger (string) {\n    var total = 0\n    for (var i = 0; i !== string.length; i++) {\n      if (total >= Number.MAX_SAFE_INTEGER) break;\n      total += string.charCodeAt(i)\n    }\n    return total\n  }\n\n  // get The range of given hue when options.count!=0\n  function getRealHueRange(colorHue)\n  { if (!isNaN(colorHue)) {\n    var number = parseInt(colorHue);\n\n    if (number < 360 && number > 0) {\n      return getColorInfo(colorHue).hueRange\n    }\n  }\n    else if (typeof colorHue === 'string') {\n\n      if (colorDictionary[colorHue]) {\n        var color = colorDictionary[colorHue];\n\n        if (color.hueRange) {\n          return color.hueRange\n       }\n    } else if (colorHue.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)) {\n        var hue = HexToHSB(colorHue)[0]\n        return getColorInfo(hue).hueRange\n    }\n  }\n\n    return [0,360]\n}\n  return randomColor;\n}));\n"],"names":["props","useState","data","setData","useEffect","labels","backgroundColor","randomColor","count","length","alpha","datasets","className","wrapper","height","type","root","factory","seed","colorDictionary","loadColorBounds","colorRanges","pickHue","options","hue","randomWithin","hueRange","getRealHueRange","step","j","parseInt","getHueRange","pickSaturation","luminosity","saturationRange","getSaturationRange","sMin","sMax","pickBrightness","H","S","bMin","getMinimumBrightness","bMax","setFormat","hsv","format","HSVtoHSL","hsl","hslColor","Math","random","HSVtoRGB","join","rgbColor","HSVtoHex","lowerBounds","getColorInfo","i","s1","v1","s2","v2","m","colorInput","number","color","match","HexToHSB","colorName","range","golden_ratio","r","floor","max","min","rnd","rgb","componentToHex","c","hex","toString","defineColor","name","brightnessRange","h","s","v","h_i","f","p","q","t","g","b","replace","red","substr","green","blue","cMax","delta","saturation","k","round","stringToInteger","string","total","Number","MAX_SAFE_INTEGER","charCodeAt","colorHue","isNaN","undefined","TypeError","totalColors","colors","push","module","exports"],"sourceRoot":""}