{"version":3,"file":"static/js/505.b956182a.chunk.js","mappings":"+PAWMA,EAAeC,EAAAA,MAAW,kBAAM,8BAAN,IAC1BC,EAAmBD,EAAAA,MAAW,kBAAM,6BAAN,IAsFpC,UAjFsB,YACJE,EAAAA,EAAAA,OACCC,EAAAA,EAAAA,MADjB,IAGA,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAsBG,GAAtB,WACA,GAAwCH,EAAAA,EAAAA,UAAS,IAAjD,eAAOI,EAAP,KAAqBC,EAArB,KACA,GAA8BL,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOM,EAAP,KACA,GADA,MACwCN,EAAAA,EAAAA,UAAS,CAAC,IAAlD,eAAOO,EAAP,KACMC,GADN,KACqB,UAKrBC,EAAAA,EAAAA,YAAU,WACR,IAAIC,GAAe,EACnBR,GAAW,GACX,IAAMS,EAAS,yCAAG,mFAChBC,EAAAA,GAAAA,eAEGC,MAAK,SAACC,GACDJ,IACFR,GAAW,GACXC,EAAiBW,GACjBT,EAAgBS,GAEnB,IACAC,OAAM,SAACC,GACNd,GAAW,GACXe,QAAQC,IAAIF,EAAMG,SAClBC,EAAAA,GAAAA,MAAY,0CACb,IAda,2CAAH,qDAmBf,OAHAT,IACAT,GAAW,GAEJ,kBAAOQ,GAAe,CAAtB,CACR,GAAE,IAGH,IACA,GAAoCV,EAAAA,EAAAA,UAAS,GAA7C,eAAOqB,EAAP,KAAmBC,EAAnB,KAUA,OACE,8BACGrB,GACC,iBAAKsB,UAAU,kCAAf,eAAmDC,EAAAA,EAAAA,IAAiB,MAApE,QAEA,gBAAKD,UAAU,YAAf,UACE,SAAC5B,EAAD,CACE8B,SAAUrB,EACVsB,SAnBO,EAoBPL,WAAYA,EACZC,cAAeA,EACfK,iBAnBe,CACvB,YACA,UACA,QACA,eACA,IAeQrB,QAASA,EACTC,aAAcA,EACdqB,mBAAoB,WAAQ,EAC5BC,mBAAoB,WAAQ,EAC5BC,kBAAmB,WAAQ,EAC3BtB,aAAcA,EAXhB,UAaE,SAACX,EAAD,CACE4B,SAAUrB,EACV2B,YAAavB,SAO1B,C","sources":["views/accounts/admin/AccountListPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport store, { accessToken } from \"src/store\";\nimport { toast } from \"react-toastify\";\nimport { deleteEmptyKeys } from \"src/utils/function\";\nimport { useDispatch } from \"react-redux\";\n\nimport { userServices } from \"src/services\";\n\n// Components\nimport { LoadingIndicator } from \"src/components\";\nconst AccountTable = React.lazy(() => import(\"../AccountTable\"));\nconst AccountTableBody = React.lazy(() => import(\"../UserAccountTableBody\"));\n\n/**\n * Agent List page\n */\nconst AgentListPage = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [loading, setLoading] = useState(false);\n  const [agentAccounts, setAgentAccounts] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [filters, setFilters] = useState({});\n  const [filterErrors, setFilterErrors] = useState({});\n  const accountsType = \"admin\";\n\n  /*\n   * Fetch Agent accounts\n   */\n  useEffect(() => {\n    let isSubscribed = true;\n    setLoading(true);\n    const fetchData = async () => {\n      userServices\n        .getAllAdmins()\n        .then((response) => {\n          if (isSubscribed) {\n            setLoading(false);\n            setAgentAccounts(response);\n            setFilteredData(response);\n          }\n        })\n        .catch((error) => {\n          setLoading(false);\n          console.log(error.message);\n          toast.error(\"Something went wrong. Please try again.\");\n        });\n    };\n    fetchData();\n    setLoading(false);\n    // Cancel any pending request\n    return () => (isSubscribed = false);\n  }, []);\n\n  // Handle pagination\n  const maxPages = 1;\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const tableHeaderCells = [\n    \"Full Name\",\n    \"Country\",\n    \"Email\",\n    \"Phone Number\",\n    \"\",\n  ];\n\n  return (\n    <>\n      {loading ? (\n        <div className=\"flex justify-center bg-slate-50\"> {LoadingIndicator(\"lg\")} </div>\n      ) : (\n        <div className=\"mt-8 px-0\">\n          <AccountTable\n            accounts={filteredData}\n            maxPages={maxPages}\n            pageNumber={pageNumber}\n            setPageNumber={setPageNumber}\n            tableHeaderCells={tableHeaderCells}\n            filters={filters}\n            filterErrors={filterErrors}\n            handleFilterChange={() => {}}\n            handleFilterSubmit={() => {}}\n            handleClearFilter={() => {}}\n            accountsType={accountsType}\n          >\n            <AccountTableBody\n              accounts={filteredData}\n              accountType={accountsType}\n            />\n          </AccountTable>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default AgentListPage;\n"],"names":["AccountTable","React","AccountTableBody","useHistory","useDispatch","useState","loading","setLoading","setAgentAccounts","filteredData","setFilteredData","filters","filterErrors","accountsType","useEffect","isSubscribed","fetchData","userServices","then","response","catch","error","console","log","message","toast","pageNumber","setPageNumber","className","LoadingIndicator","accounts","maxPages","tableHeaderCells","handleFilterChange","handleFilterSubmit","handleClearFilter","accountType"],"sourceRoot":""}