{"version":3,"file":"static/js/526.f7d8e73a.chunk.js","mappings":"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","sources":["utils/function.js","views/accounts/agent/AccountListPage.js","../node_modules/file-saver/src/FileSaver.js"],"sourcesContent":["import { saveAs } from \"file-saver\";\nimport { Timestamp , convertFirestoreTimeStampToDate} from \"src/services/firebase\";\n\n// Get image from bucket given the image identifier\nexport function getImageFromBucket(imageName) {\n  //   return `https://s3.ap-south-1.amazonaws.com/up-to-now-images/${imageName}.${imageType}`;\n  return imageName;\n}\n\n/**\n * Add given data object to FormData type object\n * @param {*} formData : FormData\n * @param {*} data : {key: value}\n * @returns FormData object\n */\nexport function addDataToFormData(data, formData = new FormData()) {\n  for (let key in data) {\n    if (key === \"images\" || key === \"image\") {\n      for (let i = 0; i < data[key].length; i++) {\n        formData.append(key, data[key][i]);\n      }\n      continue;\n    }\n    formData.set(key, data[key]);\n  }\n  return formData;\n}\n\n/**\n * Print FormData object to console\n * @param {*} formData\n * @param {*} data\n */\nexport function printFormData(formData, data) {\n  for (let key in data) {\n    console.log(key, formData.get(key));\n  }\n}\n\n/**\n * Save given image to the local\n * @param {*} urlArr : URL String Array\n */\nexport async function saveImg(urlArr, fileName) {\n  (async () => {\n    if (!Array.isArray(urlArr)) {\n      const xhr = new XMLHttpRequest();\n      xhr.responseType = 'blob';\n      xhr.onload = (event) => {\n        const blob = xhr.response;\n        saveAs(blob, fileName);\n      };\n      xhr.open('GET', urlArr);\n      xhr.send();\n      // const response = await fetch(urlArr);\n      // const blob = await response.blob();\n      // saveAs(blob);\n      return;\n    }\n    for (let i = 0; i < urlArr.length; i++) {\n      const response = await fetch(urlArr[i]);\n      const blob = await response.blob();\n      saveAs(blob);\n    }\n  })();\n}\n\n/**\n * Delete all the empty keys from the given object\n * @param {*} obj : {key: value}\n * @returns\n */\nexport function deleteEmptyKeys(obj) {\n  for (let key in obj) {\n    if (obj[key] === \"\") {\n      delete obj[key];\n    } else if (obj[key] === \"Open this select menu\") {\n      delete obj[key];\n    }\n  }\n  return obj;\n}\n\n/**\n * Convert given Date object to Sri Lanka date format string (dd/mm/yyyy)\n * @param {*} date\n * @returns\n */\nexport function convertTZ(paramDate) {\n  if (!paramDate) return \"\";\n\n  let date = paramDate;\n  if (paramDate instanceof Timestamp) {\n    date = convertFirestoreTimeStampToDate(paramDate);\n  }\n\n  let dateObj = new Date(date);\n\n  // MM-DD-YYYY format\n  let dateStr = dateObj.toLocaleDateString(\"ko-KR\", {\n    timeZone: \"Asia/Colombo\",\n  });\n  // Convert ot YYYY-MM-DD format\n  let dateArr = dateStr.split(\".\");\n  let year = dateArr[0].trim();\n  let month = dateArr[1].trim();\n  let day = dateArr[2].trim();\n\n  year.length === 2 ? (year = \"00\" + year) : year;\n  year.length === 3 ? (year = \"0\" + year) : year;\n  month.length === 1 ? (month = \"0\" + month) : month;\n  day.length === 1 ? (day = \"0\" + day) : day;\n\n  const final = `${year}-${month}-${day}`;\n  return final;\n}\n\n/**\n * Add empty strings to the given object keys if it is not present, null or undefined\n * @param {{key: value}} obj\n * @param {[key1, key2, key3]} keys\n * @returns {{key: value}} obj\n */\nexport function addEmptyStrings(obj, keys = null) {\n  if (keys) {\n    for (let i = 0; i < keys.length; i++) {\n      if (!obj[keys[i]]) {\n        obj[keys[i]] = \"\";\n      } else if (obj[keys[i]] === null) {\n        obj[keys[i]] = \"\";\n      } else if (obj[keys[i]] === undefined) {\n        obj[keys[i]] = \"\";\n      } else if (obj[keys[i]] === \"Open this select menu\") {\n        obj[keys[i]] = \"\";\n      }\n    }\n  } else {\n    for (let key in obj) {\n      if (obj[key] === null) {\n        obj[key] = \"\";\n      } else if (obj[key] === undefined) {\n        obj[key] = \"\";\n      } else if (obj[key] === \"Open this select menu\") {\n        obj[key] = \"\";\n      }\n    }\n  }\n  return obj;\n}\n\nexport function getUpdatedDataOnly(original, updated) {\n  let updatedData = {};\n  for (let key in original) {\n    if (original[key] != updated[key]) {\n      updatedData[key] = updated[key];\n    }\n  }\n  return updatedData;\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport store, { accessToken } from \"src/store\";\nimport { toast } from \"react-toastify\";\nimport { deleteEmptyKeys } from \"src/utils/function\";\nimport { useDispatch } from \"react-redux\";\n\nimport { userServices } from \"src/services\";\n\n// Components\nimport { LoadingIndicator } from \"src/components\";\nconst AccountTable = React.lazy(() => import(\"../AccountTable\"));\nconst AccountTableBody = React.lazy(() => import(\"../UserAccountTableBody\"));\n\n/**\n * Agent List page\n */\nconst AgentListPage = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const [loading, setLoading] = useState(false);\n  const [agentAccounts, setAgentAccounts] = useState([]);\n  const [filteredData, setFilteredData] = useState([]);\n  const [filters, setFilters] = useState({});\n  const [filterErrors, setFilterErrors] = useState({});\n  const accountsType = \"agent\";\n\n  /*\n   * Fetch Agent accounts\n   */\n  useEffect(() => {\n    let isSubscribed = true;\n    setLoading(true);\n\n    userServices\n      .getAllAgents()\n      .then((response) => {\n        if (isSubscribed) {\n          setLoading(false);\n          setAgentAccounts(response);\n          setFilteredData(response);\n        }\n      })\n      .catch((error) => {\n        setLoading(false);\n        console.log(error.message);\n        toast.error(\"Something went wrong. Please try again.\");\n      });\n    setLoading(false);\n    // Cancel any pending request\n    return () => (isSubscribed = false);\n  }, []);\n\n  // Handle pagination\n  const maxPages = 1;\n  const [pageNumber, setPageNumber] = useState(1);\n\n  const tableHeaderCells = [\n    \"Full Name\",\n    \"Country\",\n    \"Email\",\n    \"Phone Number\",\n    \"\",\n  ];\n\n  return (\n    <>\n      {loading ? (\n        <div className=\"flex justify-center\"> {LoadingIndicator(\"lg\")} </div>\n      ) : (\n        <AccountTable\n          accounts={filteredData}\n          maxPages={maxPages}\n          pageNumber={pageNumber}\n          setPageNumber={setPageNumber}\n          tableHeaderCells={tableHeaderCells}\n          filters={filters}\n          filterErrors={filterErrors}\n          handleFilterChange={() => {}}\n          handleFilterSubmit={() => {}}\n          handleClearFilter={() => {}}\n          accountsType={accountsType}\n        >\n          <AccountTableBody\n            accounts={filteredData}\n            accountType={accountsType}\n          />\n        </AccountTable>\n      )}\n    </>\n  );\n};\n\nexport default AgentListPage;\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"names":["saveImg","urlArr","fileName","Array","isArray","xhr","XMLHttpRequest","responseType","onload","event","blob","response","saveAs","open","send","i","length","fetch","deleteEmptyKeys","obj","key","convertTZ","paramDate","date","Timestamp","convertFirestoreTimeStampToDate","dateArr","Date","toLocaleDateString","timeZone","split","year","trim","month","day","AccountTable","React","AccountTableBody","useHistory","useDispatch","useState","loading","setLoading","setAgentAccounts","filteredData","setFilteredData","filters","filterErrors","accountsType","useEffect","isSubscribed","userServices","then","catch","error","console","log","message","toast","pageNumber","setPageNumber","className","LoadingIndicator","accounts","maxPages","tableHeaderCells","handleFilterChange","handleFilterSubmit","handleClearFilter","accountType","b","a","autoBom","warn","test","type","Blob","c","d","g","onerror","status","e","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","userAgent","HTMLAnchorElement","prototype","h","URL","webkitURL","j","createElement","name","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","title","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module","exports"],"sourceRoot":""}